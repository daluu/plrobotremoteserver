#summary Items to address/discuss for remote server development

= Introduction =

The Perl code here is not fully functional, but is provided as a starting base for a working prototype.

It is my hope and intention that the Perl and open source community can offer contributions to turn this sample code into a working prototype. Contributions in terms of source code changes/additions, or advice/tips for suggested changes. Later on, could use "testers" to test out the working prototype.

FYI, this code here is for a remote server interface for remote test libraries built with Perl for use with [http://www.RobotFramework.org Robot Framework]. See http://code.google.com/p/robotframework/wiki/RemoteLibrary for more info.

Robot Framework currently has remote server implementations (and thus support) for Python, Ruby, .NET, and Java. The Robot Framework project would also like to have a Perl version but no one had the resource or expertise to build one. I made an attempt and this is it. 

I don't see why we can't build a Perl version. I don't think it may be that hard, but since I'm not a Perl guru, and Perl is one of those few languages that can be very simple to very cryptically complex, I need your help...

Check out the source code, review it, then run code and try it out for yourself to see the current issues mentioned below.

= Issues with current code =

== XML-RPC requests to methods don't work as intended ==

Sending a request like this

{{{
<?xml version='1.0' encoding='UTF-8'?>
 <methodCall>
  <methodName>get_keyword_names</methodName>
  <params></params>
 </methodCall>
}}}

results in output like this

{{{
<?xml version="1.0"?>
 <methodResponse>
  <params>
   <param>
    <value>
     <i4>1</i4>
    </value>
   </param>
  </params>
 </methodResponse>
}}}

when it should be an array of strings of keyword names instead of a single integer value of 1.

Sending request like this

{{{
<?xml version='1.0' encoding='UTF-8'?>
 <methodCall>
  <methodName>run_keyword</methodName>
  <params>
   <param>
    <value>
     <string>strings_should_be_equal</string>
    </value>
   </param>
   <param>
    <value>
     <array>
      <data>
       <value>
        <string>hello</string>
       </value>
       <value>
        <string>world</string>
       </value>
      </data>
     </array>
    </value>
   </param>
  </params>
 </methodCall>
}}}

should not return something like this:

{{{
<?xml version="1.0"?>
 <methodResponse>
  <params>
   <param>
    <value>
     <struct>
      <member>
       <name>Return</name>
       <value><string></string></value>
      </member>
      <member>
       <name>status</name>
       <value><string>FAIL</string></value>
      </member>
      <member>
       <name>traceback</name>
       <value><string>Can't call method &quot;ARRAY(0x1d5599c)&quot; on an undefined value at RobotRemoteServer.pm line 98.
</string></value>
      </member>
      <member>
       <name>error</name>
       <value><string>Can't call method &quot;ARRAY(0x1d5599c)&quot; on an undefined value at RobotRemoteServer.pm line 98.
</string></value>
      </member>
      <member>
       <name>output</name>
       <value><string>Can't call method &quot;ARRAY(0x1d5599c)&quot; on an undefined value at RobotRemoteServer.pm line 98.
</string></value>
      </member>
     </struct>
    </value>
   </param>
  </params>
 </methodResponse>
}}}

shouldn't throw exception like this. Same occurs for calling other supported keywords.

== Code doesn't work intended when executed locally rather than XML-RPC ==

The following is console output of code execution of the debug code followed by some test XML-RPC request made to same code paths. XML-RPC requests made via REST client browser plugin for Chrome.

We shouldn't see the HASH references being printed out. Rather it should be some scalar string/integer value being printed out.
{{{
  F:\Temp>perl exampleremoteserver.pl
  Debugging info...

  keywords:
  rule
  count_items_in_directory
  find
  strings_should_be_equal
  stop_remote_server

  runkeyword:

  string equal:

  RPC args:
  hello
  world

  Comparing 'ExampleLibrary' to 'hello'HASH(0x1c6133c)

  count dir:

  RPC args:
  C:\Temp

  HASH(0x1d1122c)


  RPC args:

  RPC args:

  Terminating on signal SIGINT(2)

  F:\Temp>
}}}

== How should the server work? ==

It should conform to the Robot Framework specs at

http://code.google.com/p/robotframework/wiki/RemoteLibrary

and

http://robotframework.googlecode.com/svn/tags/robotframework-2.5.6/doc/userguide/RobotFrameworkUserGuide.html#remote-library-interface

And should work similarly to the other remote server implementations. Python version referenced in the Robot Framework specs pages.

.NET and Java versions to compare here:

http://code.google.com/p/sharprobotremoteserver/

http://code.google.com/p/jrobotremoteserver/